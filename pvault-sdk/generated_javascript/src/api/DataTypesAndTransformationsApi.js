/**
 * Piiano Vault REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ModelsTransformationDoc from '../model/ModelsTransformationDoc';
import PiitypePIIType from '../model/PiitypePIIType';
import RestHTTPError from '../model/RestHTTPError';

/**
* DataTypesAndTransformations service.
* @module api/DataTypesAndTransformationsApi
* @version 1.0
*/
export default class DataTypesAndTransformationsApi {

    /**
    * Constructs a new DataTypesAndTransformationsApi. 
    * @alias module:api/DataTypesAndTransformationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the listPropertyTypes operation.
     * @callback module:api/DataTypesAndTransformationsApi~listPropertyTypesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PiitypePIIType>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List property types
     * @param {module:model/String} reason Details of the reason for requesting the property. The default is set when no access reason is provided and PVAULT_SERVICE_FORCE_ACCESS_REASON is false.
     * @param {Object} opts Optional parameters
     * @param {String} opts.adhocReason An ad-hoc reason for accessing the Vault data.
     * @param {module:api/DataTypesAndTransformationsApi~listPropertyTypesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PiitypePIIType>}
     */
    listPropertyTypes(reason, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'reason' is set
      if (reason === undefined || reason === null) {
        throw new Error("Missing the required parameter 'reason' when calling listPropertyTypes");
      }

      let pathParams = {
      };
      let queryParams = {
        'adhoc_reason': opts['adhocReason'],
        'reason': reason
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [PiitypePIIType];
      return this.apiClient.callApi(
        '/api/pvlt/1.0/ctl/types', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listTransformations operation.
     * @callback module:api/DataTypesAndTransformationsApi~listTransformationsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ModelsTransformationDoc>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List transformations
     * @param {module:model/String} reason Details of the reason for requesting the property. The default is set when no access reason is provided and PVAULT_SERVICE_FORCE_ACCESS_REASON is false.
     * @param {Object} opts Optional parameters
     * @param {String} opts.adhocReason An ad-hoc reason for accessing the Vault data.
     * @param {module:api/DataTypesAndTransformationsApi~listTransformationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ModelsTransformationDoc>}
     */
    listTransformations(reason, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'reason' is set
      if (reason === undefined || reason === null) {
        throw new Error("Missing the required parameter 'reason' when calling listTransformations");
      }

      let pathParams = {
      };
      let queryParams = {
        'adhoc_reason': opts['adhocReason'],
        'reason': reason
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ModelsTransformationDoc];
      return this.apiClient.callApi(
        '/api/pvlt/1.0/ctl/transformations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
