/**
 * Piiano Vault REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AuthPolicy from './AuthPolicy';
import AuthRole from './AuthRole';
import AuthUser from './AuthUser';

/**
 * The AuthConfig model module.
 * @module model/AuthConfig
 * @version 1.0
 */
class AuthConfig {
    /**
     * Constructs a new <code>AuthConfig</code>.
     * @alias module:model/AuthConfig
     */
    constructor() { 
        
        AuthConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AuthConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthConfig} obj Optional instance to populate.
     * @return {module:model/AuthConfig} The populated <code>AuthConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthConfig();

            if (data.hasOwnProperty('policies')) {
                obj['policies'] = ApiClient.convertToType(data['policies'], {'String': AuthPolicy});
            }
            if (data.hasOwnProperty('roles')) {
                obj['roles'] = ApiClient.convertToType(data['roles'], {'String': AuthRole});
            }
            if (data.hasOwnProperty('users')) {
                obj['users'] = ApiClient.convertToType(data['users'], {'String': AuthUser});
            }
        }
        return obj;
    }


}

/**
 * @member {Object.<String, module:model/AuthPolicy>} policies
 */
AuthConfig.prototype['policies'] = undefined;

/**
 * @member {Object.<String, module:model/AuthRole>} roles
 */
AuthConfig.prototype['roles'] = undefined;

/**
 * @member {Object.<String, module:model/AuthUser>} users
 */
AuthConfig.prototype['users'] = undefined;






export default AuthConfig;

