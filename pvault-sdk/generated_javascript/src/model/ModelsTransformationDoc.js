/**
 * Piiano Vault REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelsConfigurationDoc from './ModelsConfigurationDoc';

/**
 * The ModelsTransformationDoc model module.
 * @module model/ModelsTransformationDoc
 * @version 1.0
 */
class ModelsTransformationDoc {
    /**
     * Constructs a new <code>ModelsTransformationDoc</code>.
     * Details of a transformation that can be performed on a PII data type within a collection. Note: &#x60;pii_type_id&#x60; and &#x60;name&#x60; together are also a unique identifier of a transformation in a collection.
     * @alias module:model/ModelsTransformationDoc
     */
    constructor() { 
        
        ModelsTransformationDoc.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ModelsTransformationDoc</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelsTransformationDoc} obj Optional instance to populate.
     * @return {module:model/ModelsTransformationDoc} The populated <code>ModelsTransformationDoc</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelsTransformationDoc();

            if (data.hasOwnProperty('configuration')) {
                obj['configuration'] = ModelsConfigurationDoc.constructFromObject(data['configuration']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('pii_type_name')) {
                obj['pii_type_name'] = ApiClient.convertToType(data['pii_type_name'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/ModelsConfigurationDoc} configuration
 */
ModelsTransformationDoc.prototype['configuration'] = undefined;

/**
 * The name of the transformation.
 * @member {String} name
 */
ModelsTransformationDoc.prototype['name'] = undefined;

/**
 * The name of the PII type.
 * @member {String} pii_type_name
 */
ModelsTransformationDoc.prototype['pii_type_name'] = undefined;






export default ModelsTransformationDoc;

